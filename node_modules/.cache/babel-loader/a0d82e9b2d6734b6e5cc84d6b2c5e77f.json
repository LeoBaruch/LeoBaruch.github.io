{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"html\", null, [/*#__PURE__*/_createElementVNode(\"head\"), /*#__PURE__*/_createElementVNode(\"body\", null, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"优先队列\"), /*#__PURE__*/_createElementVNode(\"p\", null, \"普通队列是一种先进先出的数据结构，先放进队列的元素取值时优先被取出来。而优先队列是一种具有最高优先级元素先出的数据结构，比如每次取值都取最大的元素, 它包含最重要的两种操作: 删除最大元素delMax和插入元素insert().\"), /*#__PURE__*/_createElementVNode(\"h3\", null, \"堆的定义\"), /*#__PURE__*/_createElementVNode(\"p\", null, \"当一颗二叉树的每个节点都大于等于它的两个字节点时,它被称为堆有序, 所以根节点时堆有序的二叉树中的最大节点\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"section\", null, _hoisted_2);\n}","map":{"version":3,"mappings":";;gCAASA,oBAIK,MAJL,EAIK,IAJL,EAIK,cAJCA,oBAAa,MAAb,CAID,eAJcA,oBAIrB,MAJqB,EAIrB,IAJqB,EAIrB,cAJ2BA,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAI3B,eAHPA,oBAAyH,GAAzH,EAAyH,IAAzH,EAAG,oHAAH,CAGO,eAFPA,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,CAEO,eADPA,oBAA4D,GAA5D,EAA4D,IAA5D,EAAG,uDAAH,CACO,CAJqB,CAId,CAJL;;AAAA;;oBAAAC;;uBAATC,oBAIwB,SAJxB,EAIwB,IAJxB","names":["_createElementVNode","_hoisted_1","_createElementBlock"],"sourceRoot":"","sources":["/Users/gexiaolong/Downloads/others/coding/myblog/src/md/PriorityQueue.md"],"sourcesContent":["<template><section><html><head></head><body><h2>优先队列</h2>\n<p>普通队列是一种先进先出的数据结构，先放进队列的元素取值时优先被取出来。而优先队列是一种具有最高优先级元素先出的数据结构，比如每次取值都取最大的元素, 它包含最重要的两种操作: 删除最大元素delMax和插入元素insert().</p>\n<h3>堆的定义</h3>\n<p>当一颗二叉树的每个节点都大于等于它的两个字节点时,它被称为堆有序, 所以根节点时堆有序的二叉树中的最大节点</p>\n</body></html></section></template>\n\n"]},"metadata":{},"sourceType":"module"}