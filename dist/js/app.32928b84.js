(function(){"use strict";var s={199:function(s,n,l){var a=l(963),r=l(119),t=l(252);const e=(0,t._)("h2",null,"最近文章",-1),o=(0,t.Uk)("排序");function c(s,n,l,a,r,c){const u=(0,t.up)("router-link");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t.Wm)(u,{to:"/sort"},{default:(0,t.w5)((()=>[o])),_:1})])])],64)}var u={name:"About",data(){return{aboutMsg:"我是about组件"}}},i=l(744);const _=(0,i.Z)(u,[["render",c]]);var p=_;const k={class:"markdown-body"};function h(s,n,l,a,r,e){const o=(0,t.up)("SortMd");return(0,t.wg)(),(0,t.iD)("div",k,[(0,t.Wm)(o)])}const j=(0,t._)("html",null,[(0,t._)("head"),(0,t._)("body",null,[(0,t._)("h2",null,"排序"),(0,t._)("h3",null,"归并排序"),(0,t._)("p",null,"归并排序的性能不受输入数据的影响,为稳定排序算法, 速度仅次于快速排序."),(0,t._)("h4",null,"思想"),(0,t._)("p",null,"采用分治法Divide and Conquer）, 分治模式在每一层递归上有三个步骤:"),(0,t._)("ul",null,[(0,t._)("li",null,"分解（Divide）：将n个元素分成个含n/2个元素的子序列。"),(0,t._)("li",null,"解决（Conquer）：用合并排序法对两个子序列递归的排序。"),(0,t._)("li",null,"合并（Combine）：合并两个已排序的子序列已得到排序结果。")]),(0,t._)("h4",null,"实现逻辑(算法第四版 2.2.1):"),(0,t._)("p",null,"先将所有元素复制到aux[], 然后再归并到a[]中. 在归并时,进行4个条件判断:"),(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("p",null,"左半边用尽(取右半边元素),")]),(0,t._)("li",null,[(0,t._)("p",null,"右半边用尽(取右半边元素),")]),(0,t._)("li",null,[(0,t._)("p",null,"右半边当前元素小于左半边当前元素(取右半边元素),")]),(0,t._)("li",null,[(0,t._)("p",null,"右半边当前元素小于等于左半边元素(取左半边元素)")])]),(0,t._)("pre",null,[(0,t._)("code",{"v-pre":"",class:"language-ts"},[(0,t.Uk)("\n"),(0,t._)("span",{class:"hljs-keyword"},"function"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-title function_"},"merge"),(0,t.Uk)("("),(0,t._)("span",{class:"hljs-params"},[(0,t.Uk)("a: Comparable[], lo: "),(0,t._)("span",{class:"hljs-built_in"},"number"),(0,t.Uk)(", mid: "),(0,t._)("span",{class:"hljs-built_in"},"number"),(0,t.Uk)(", hi: "),(0,t._)("span",{class:"hljs-built_in"},"number")]),(0,t.Uk)(") {\n  "),(0,t._)("span",{class:"hljs-keyword"},"let"),(0,t.Uk)(" i = lo; "),(0,t._)("span",{class:"hljs-keyword"},"let"),(0,t.Uk)(" j = mid + "),(0,t._)("span",{class:"hljs-number"},"1"),(0,t.Uk)(";\n\n  "),(0,t._)("span",{class:"hljs-keyword"},"const"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-attr"},"aux"),(0,t.Uk)(": "),(0,t._)("span",{class:"hljs-title class_"},"Comparable"),(0,t.Uk)("[] = "),(0,t._)("span",{class:"hljs-title class_"},"Array"),(0,t.Uk)("."),(0,t._)("span",{class:"hljs-title function_"},"from"),(0,t.Uk)("(a);\n\n  "),(0,t._)("span",{class:"hljs-keyword"},"for"),(0,t.Uk)("("),(0,t._)("span",{class:"hljs-keyword"},"let"),(0,t.Uk)(" k = lo; k <= hi; k++) {\n    "),(0,t._)("span",{class:"hljs-keyword"},"if"),(0,t.Uk)("(i > mid) a[k] = aux[j++];\n    "),(0,t._)("span",{class:"hljs-keyword"},"else"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-keyword"},"if"),(0,t.Uk)("( j > hi) a[k] = aux[i++];\n    "),(0,t._)("span",{class:"hljs-keyword"},"else"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-keyword"},"if"),(0,t.Uk)("("),(0,t._)("span",{class:"hljs-title function_"},"less"),(0,t.Uk)("(aux[j], aux[i])) a[k] = aux[j++];\n    "),(0,t._)("span",{class:"hljs-keyword"},"else"),(0,t.Uk)(" a[k] = a[i++];\n  }\n}\n\n")])]),(0,t._)("h5",null,"递归法(2.2.2)"),(0,t._)("pre",null,[(0,t._)("code",{"v-pre":"",class:"language-ts"},[(0,t.Uk)("\n"),(0,t._)("span",{class:"hljs-keyword"},"function"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-title function_"},"mergeSort"),(0,t.Uk)("("),(0,t._)("span",{class:"hljs-params"},"arr: Comparable[]"),(0,t.Uk)(") {\n  "),(0,t._)("span",{class:"hljs-keyword"},"const"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-attr"},"aux"),(0,t.Uk)(": "),(0,t._)("span",{class:"hljs-title class_"},"Comparable"),(0,t.Uk)("[] = [];\n\n  "),(0,t._)("span",{class:"hljs-keyword"},"function"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-title function_"},"sort"),(0,t.Uk)("("),(0,t._)("span",{class:"hljs-params"},[(0,t.Uk)("array: Comparable[], lo: "),(0,t._)("span",{class:"hljs-built_in"},"number"),(0,t.Uk)(", hi: "),(0,t._)("span",{class:"hljs-built_in"},"number")]),(0,t.Uk)(") {\n    "),(0,t._)("span",{class:"hljs-keyword"},"if"),(0,t.Uk)("(hi <= lo) "),(0,t._)("span",{class:"hljs-keyword"},"return"),(0,t.Uk)(";\n    "),(0,t._)("span",{class:"hljs-keyword"},"const"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-attr"},"mid"),(0,t.Uk)(": "),(0,t._)("span",{class:"hljs-built_in"},"number"),(0,t.Uk)(" = lo + (hi - lo) / "),(0,t._)("span",{class:"hljs-number"},"2"),(0,t.Uk)(";\n\n    "),(0,t._)("span",{class:"hljs-title function_"},"sort"),(0,t.Uk)("(array, lo, mid);\n    "),(0,t._)("span",{class:"hljs-title function_"},"sort"),(0,t.Uk)("(array, mid + "),(0,t._)("span",{class:"hljs-number"},"1"),(0,t.Uk)(", hi);\n\n    "),(0,t._)("span",{class:"hljs-title function_"},"merge"),(0,t.Uk)("(array, lo, mid , hi);\n  }\n\n  "),(0,t._)("span",{class:"hljs-title function_"},"sort"),(0,t.Uk)("(arr, "),(0,t._)("span",{class:"hljs-number"},"0"),(0,t.Uk)(" , arr."),(0,t._)("span",{class:"hljs-property"},"length"),(0,t.Uk)(" - "),(0,t._)("span",{class:"hljs-number"},"1"),(0,t.Uk)(");\n\n  "),(0,t._)("span",{class:"hljs-keyword"},"return"),(0,t.Uk)(" arr;\n}\n\n")])]),(0,t._)("h5",null,"迭代法(2.2.3)"),(0,t._)("pre",null,[(0,t._)("code",{"v-pre":"",class:"language-ts"},[(0,t.Uk)("\n"),(0,t._)("span",{class:"hljs-keyword"},"function"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-title function_"},"mergeSort"),(0,t.Uk)("("),(0,t._)("span",{class:"hljs-params"},"arr: Comparable[]"),(0,t.Uk)(") {\n  "),(0,t._)("span",{class:"hljs-keyword"},"const"),(0,t.Uk)(" { length } = arr;\n  "),(0,t._)("span",{class:"hljs-keyword"},"const"),(0,t.Uk)(),(0,t._)("span",{class:"hljs-attr"},"aux"),(0,t.Uk)(": "),(0,t._)("span",{class:"hljs-title class_"},"Comparable"),(0,t.Uk)("[] = [];\n\n  "),(0,t._)("span",{class:"hljs-keyword"},"for"),(0,t.Uk)("("),(0,t._)("span",{class:"hljs-keyword"},"let"),(0,t.Uk)(" sz = "),(0,t._)("span",{class:"hljs-number"},"1"),(0,t.Uk)("; sz < length; sz += sz + sz) { "),(0,t._)("span",{class:"hljs-comment"},"// sz 子数组大小"),(0,t.Uk)("\n    "),(0,t._)("span",{class:"hljs-keyword"},"for"),(0,t.Uk)("("),(0,t._)("span",{class:"hljs-keyword"},"let"),(0,t.Uk)(" lo = "),(0,t._)("span",{class:"hljs-number"},"0"),(0,t.Uk)("; lo < length - sz; lo += sz + sz) { "),(0,t._)("span",{class:"hljs-comment"},"// 子数组索引"),(0,t.Uk)("\n      "),(0,t._)("span",{class:"hljs-title function_"},"merge"),(0,t.Uk)("(arr, lo, lo + sz - "),(0,t._)("span",{class:"hljs-number"},"1"),(0,t.Uk)(", "),(0,t._)("span",{class:"hljs-title class_"},"Math"),(0,t.Uk)("."),(0,t._)("span",{class:"hljs-title function_"},"min"),(0,t.Uk)("(lo + sz + sz - "),(0,t._)("span",{class:"hljs-number"},"1"),(0,t.Uk)(", length -"),(0,t._)("span",{class:"hljs-number"},"1"),(0,t.Uk)("))\n    }\n  }\n\n}\n\n")])]),(0,t._)("p",null,"不管元素在什么情况下都要做这些步骤，所以花销的时间是不变的，所以该算法的最优时间复杂度和最差时间复杂度及平均时间复杂度都是一样的为：O( nlogn )"),(0,t._)("p",null,"空间复杂度为: O(n)。")])],-1),U=[j];function f(s,n){return(0,t.wg)(),(0,t.iD)("section",null,U)}const m={},d=(0,i.Z)(m,[["render",f]]);var b=d,y=(l(29),{name:"Sort",components:{SortMd:b}});const w=(0,i.Z)(y,[["render",h]]);var v=w;const g=[{path:"/",component:p},{path:"/sort",component:v}];var x=g;function O(s,n,l,a,r,e){const o=(0,t.up)("router-view");return(0,t.wg)(),(0,t.j4)(o)}var z={name:"App",components:{}};const C=(0,i.Z)(z,[["render",O]]);var D=C;const S=(0,r.p7)({history:(0,r.r5)(),routes:x}),M=(0,a.ri)(D);M.use(S),M.mount("#app")}},n={};function l(a){var r=n[a];if(void 0!==r)return r.exports;var t=n[a]={exports:{}};return s[a](t,t.exports,l),t.exports}l.m=s,function(){var s=[];l.O=function(n,a,r,t){if(!a){var e=1/0;for(i=0;i<s.length;i++){a=s[i][0],r=s[i][1],t=s[i][2];for(var o=!0,c=0;c<a.length;c++)(!1&t||e>=t)&&Object.keys(l.O).every((function(s){return l.O[s](a[c])}))?a.splice(c--,1):(o=!1,t<e&&(e=t));if(o){s.splice(i--,1);var u=r();void 0!==u&&(n=u)}}return n}t=t||0;for(var i=s.length;i>0&&s[i-1][2]>t;i--)s[i]=s[i-1];s[i]=[a,r,t]}}(),function(){l.d=function(s,n){for(var a in n)l.o(n,a)&&!l.o(s,a)&&Object.defineProperty(s,a,{enumerable:!0,get:n[a]})}}(),function(){l.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(s){if("object"===typeof window)return window}}()}(),function(){l.o=function(s,n){return Object.prototype.hasOwnProperty.call(s,n)}}(),function(){var s={143:0};l.O.j=function(n){return 0===s[n]};var n=function(n,a){var r,t,e=a[0],o=a[1],c=a[2],u=0;if(e.some((function(n){return 0!==s[n]}))){for(r in o)l.o(o,r)&&(l.m[r]=o[r]);if(c)var i=c(l)}for(n&&n(a);u<e.length;u++)t=e[u],l.o(s,t)&&s[t]&&s[t][0](),s[t]=0;return l.O(i)},a=self["webpackChunkmyblog"]=self["webpackChunkmyblog"]||[];a.forEach(n.bind(null,0)),a.push=n.bind(null,a.push.bind(a))}();var a=l.O(void 0,[998],(function(){return l(199)}));a=l.O(a)})();
//# sourceMappingURL=app.32928b84.js.map